11 memory shared

server

#include <stdio.h>
#include <stdlib.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <string.h>
#include <unistd.h>

#define SHM_SIZE 1024 
#define SHM_KEY 1234 

int main() {
    int shmid;
    char *shared_memory;
    shmid = shmget(SHM_KEY, SHM_SIZE, IPC_CREAT | 0666);
    shared_memory = (char *)shmat(shmid, NULL, 0);

    strcpy(shared_memory, "Hello from server!");

    printf("Server: Message written to shared memory.\n");

    shmdt(shared_memory);

    return 0;
}


client

#include <stdio.h>
#include <stdlib.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <string.h>
#include <unistd.h>

#define SHM_SIZE 1024  
#define SHM_KEY 1234   

int main() {
    int shmid;
    char *shared_memory;

    shmid = shmget(SHM_KEY, SHM_SIZE, 0666);
    if (shmid < 0) {
        perror("shmget failed");
        exit(1);
    }

    shared_memory = (char *)shmat(shmid, NULL, 0);
    if (shared_memory == (char *)(-1)) {
        perror("shmat failed");
        exit(1);
    }

    printf("Client: Read from shared memory: %s\n", shared_memory);

    shmdt(shared_memory);

    shmctl(shmid, IPC_RMID, NULL);

    return 0;
}
